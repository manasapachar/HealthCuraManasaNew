<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="12" total="31" passed="18" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-03-29T18:20:35 IST" name="Suite" finished-at="2023-03-29T18:21:56 IST" duration-ms="80444">
    <groups>
    </groups>
    <test started-at="2023-03-29T18:20:35 IST" name="Test" finished-at="2023-03-29T18:21:56 IST" duration-ms="80444">
      <class name="TestCases.HistoryTestCases">
        <test-method signature="verifyUser()[pri:0, instance:TestCases.HistoryTestCases@3c419631]" started-at="2023-03-29T18:21:23 IST" name="verifyUser" finished-at="2023-03-29T18:21:25 IST" duration-ms="1991" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUser -->
        <test-method signature="verifynoHistory()[pri:0, instance:TestCases.HistoryTestCases@3c419631]" started-at="2023-03-29T18:21:25 IST" name="verifynoHistory" finished-at="2023-03-29T18:21:29 IST" duration-ms="4052" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifynoHistory -->
      </class> <!-- TestCases.HistoryTestCases -->
      <class name="TestCases.LoginFunctionalityTestCase">
        <test-method signature="VerifyUser(java.lang.String,java.lang.String)[pri:0, instance:TestCases.LoginFunctionalityTestCase@61230f6a]" started-at="2023-03-29T18:21:35 IST" name="VerifyUser" data-provider="getInfo" finished-at="2023-03-29T18:21:38 IST" duration-ms="3290" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[abcde]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyUser -->
        <test-method signature="VerifyUser(java.lang.String,java.lang.String)[pri:0, instance:TestCases.LoginFunctionalityTestCase@61230f6a]" started-at="2023-03-29T18:21:38 IST" name="VerifyUser" data-provider="getInfo" finished-at="2023-03-29T18:21:42 IST" duration-ms="3377" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[abc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[xyz]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyUser -->
        <test-method signature="VerifyUser(java.lang.String,java.lang.String)[pri:0, instance:TestCases.LoginFunctionalityTestCase@61230f6a]" started-at="2023-03-29T18:21:42 IST" name="VerifyUser" data-provider="getInfo" finished-at="2023-03-29T18:21:45 IST" duration-ms="3418" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[John]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Passord]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyUser -->
        <test-method signature="VerifyUser(java.lang.String,java.lang.String)[pri:0, instance:TestCases.LoginFunctionalityTestCase@61230f6a]" started-at="2023-03-29T18:21:45 IST" name="VerifyUser" data-provider="getInfo" finished-at="2023-03-29T18:21:49 IST" duration-ms="3499" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[johndoe@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qwerrty]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyUser -->
        <test-method signature="VerifyUser(java.lang.String,java.lang.String)[pri:0, instance:TestCases.LoginFunctionalityTestCase@61230f6a]" started-at="2023-03-29T18:21:49 IST" name="VerifyUser" data-provider="getInfo" finished-at="2023-03-29T18:21:52 IST" duration-ms="3299" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[john@Doe.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[poiuyt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyUser -->
        <test-method signature="VerifyUser(java.lang.String,java.lang.String)[pri:0, instance:TestCases.LoginFunctionalityTestCase@61230f6a]" started-at="2023-03-29T18:21:52 IST" name="VerifyUser" data-provider="getInfo" finished-at="2023-03-29T18:21:56 IST" duration-ms="3549" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[John Doe]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[ThisIsNotAPassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyUser -->
      </class> <!-- TestCases.LoginFunctionalityTestCase -->
      <class name="TestCases.LoginTestCases">
        <test-method signature="alterUser()[pri:0, instance:TestCases.LoginTestCases@49d904ec]" started-at="2023-03-29T18:20:39 IST" name="alterUser" finished-at="2023-03-29T18:20:50 IST" duration-ms="11379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alterUser -->
        <test-method signature="invalidUser()[pri:0, instance:TestCases.LoginTestCases@49d904ec]" started-at="2023-03-29T18:20:50 IST" name="invalidUser" finished-at="2023-03-29T18:20:56 IST" duration-ms="5972" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUser -->
        <test-method signature="noUser()[pri:0, instance:TestCases.LoginTestCases@49d904ec]" started-at="2023-03-29T18:20:56 IST" name="noUser" finished-at="2023-03-29T18:21:02 IST" duration-ms="5942" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noUser -->
        <test-method signature="validUser()[pri:0, instance:TestCases.LoginTestCases@49d904ec]" started-at="2023-03-29T18:21:02 IST" name="validUser" finished-at="2023-03-29T18:21:12 IST" duration-ms="9817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validUser -->
      </class> <!-- TestCases.LoginTestCases -->
      <class name="TestCases.LogoutTestCases">
        <test-method signature="testLogout()[pri:0, instance:TestCases.LogoutTestCases@418e7838]" started-at="2023-03-29T18:21:29 IST" name="testLogout" finished-at="2023-03-29T18:21:32 IST" duration-ms="2905" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [We Care About Your Health] but found [We Care For Your Health]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [We Care About Your Health] but found [We Care For Your Health]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at TestCases.LogoutTestCases.testLogout(LogoutTestCases.java:36)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLogout -->
      </class> <!-- TestCases.LogoutTestCases -->
      <class name="TestCases.MakeAppointment">
        <test-method signature="verifyUser()[pri:0, instance:TestCases.MakeAppointment@4b5d6a01]" started-at="2023-03-29T18:21:12 IST" name="verifyUser" finished-at="2023-03-29T18:21:14 IST" duration-ms="2104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUser -->
        <test-method signature="verifyAppointment()[pri:0, instance:TestCases.MakeAppointment@4b5d6a01]" started-at="2023-03-29T18:21:14 IST" name="verifyAppointment" finished-at="2023-03-29T18:21:17 IST" depends-on-methods="TestCases.MakeAppointment.verifyUser" duration-ms="3276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAppointment -->
      </class> <!-- TestCases.MakeAppointment -->
      <class name="TestCases.HistoryAppointmentTestCases">
        <test-method signature="verifyUser()[pri:0, instance:TestCases.HistoryAppointmentTestCases@4a22f9e2]" started-at="2023-03-29T18:21:17 IST" name="verifyUser" finished-at="2023-03-29T18:21:19 IST" duration-ms="1998" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUser -->
        <test-method signature="verifyAppointment()[pri:0, instance:TestCases.HistoryAppointmentTestCases@4a22f9e2]" started-at="2023-03-29T18:21:19 IST" name="verifyAppointment" finished-at="2023-03-29T18:21:21 IST" depends-on-methods="TestCases.HistoryAppointmentTestCases.verifyUser" duration-ms="1787" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAppointment -->
        <test-method signature="verifyAppointment1()[pri:0, instance:TestCases.HistoryAppointmentTestCases@4a22f9e2]" started-at="2023-03-29T18:21:21 IST" name="verifyAppointment1" finished-at="2023-03-29T18:21:23 IST" depends-on-methods="TestCases.HistoryAppointmentTestCases.verifyAppointment" duration-ms="1936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAppointment1 -->
      </class> <!-- TestCases.HistoryAppointmentTestCases -->
      <class name="TestCases.HomeTestCases">
        <test-method is-config="true" signature="setup()[pri:0, instance:TestCases.HomeTestCases@2473d930]" started-at="2023-03-29T18:20:29 IST" name="setup" finished-at="2023-03-29T18:20:35 IST" duration-ms="6735" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testHomeScreen()[pri:0, instance:TestCases.HomeTestCases@2473d930]" started-at="2023-03-29T18:20:35 IST" name="testHomeScreen" finished-at="2023-03-29T18:20:39 IST" duration-ms="3325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHomeScreen -->
        <test-method is-config="true" signature="tear()[pri:0, instance:TestCases.HomeTestCases@2473d930]" started-at="2023-03-29T18:21:56 IST" name="tear" finished-at="2023-03-29T18:21:56 IST" duration-ms="331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tear -->
      </class> <!-- TestCases.HomeTestCases -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
